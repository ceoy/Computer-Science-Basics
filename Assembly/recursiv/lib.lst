     1                                  ; Author: Tim Jahn
     2                                  ; Email: ceoymw@gmail.com
     3                                  ; Description: recursiv stuff :)
     4                                  
     5                                  section .text    
     6                                  global calcSum
     7                                  global someTriangle
     8                                  global calcFib
     9                                  
    10                                  
    11                                  ;***********************    
    12                                  ; in:   eax = n
    13                                  ; out:  edx = sum
    14                                  calcSum:
    15 00000000 50                          push rax
    16 00000001 31D2                        xor edx, edx ; so we dont have a fck up
    17 00000003 E802000000                  call add
    18                                  .done:
    19 00000008 58                          pop rax
    20 00000009 C3                          ret
    21                                  
    22                                  add:
    23 0000000A 83F800                      cmp eax, 0     ; check if we reached the end
    24 0000000D 7409                        je .done       ; we done boi
    25 0000000F 01C2                        add edx, eax ; add eax to edx
    26 00000011 FFC8                        dec eax        ; decrease couter
    27 00000013 E8F2FFFFFF                  call add       ; cont.
    28                                  .done:
    29 00000018 C3                          ret 
    30                                  ;***********************
    31                                  
    32                                  ;***********************
    33                                  ; Calculate the result of
    34                                  ; ( n ) = ( n-1 ) + ( n-1 )
    35                                  ; ( k ) = ( k )   + ( k-1 )
    36                                  ;***********************
    37                                  ; in:
    38                                  ;   ah = n
    39                                  ;   al = k
    40                                  ;   edx = result
    41                                  someTriangle:
    42 00000019 50                          push rax
    43 0000001A 31D2                        xor edx, edx
    44 0000001C E802000000                  call continueTriangle
    45 00000021 58                          pop rax
    46 00000022 C3                          ret
    47                                      
    48                                  continueTriangle:
    49 00000023 50                          push rax
    50 00000024 3C00                        cmp al, 0 ; add 1
    51 00000026 7414                        je .add 
    52 00000028 38E0                        cmp al, ah ; check if they are equal
    53 0000002A 7410                        je .add
    54 0000002C FECC                        dec ah
    55 0000002E E8F0FFFFFF                  call continueTriangle
    56 00000033 FEC8                        dec al
    57 00000035 E8E9FFFFFF                  call continueTriangle
    58 0000003A EB03                        jmp .done
    59                                  .add:
    60 0000003C 83C201                      add edx, 1
    61                                  .done:
    62 0000003F 58                          pop rax
    63 00000040 C3                          ret
    64                                  ;***********************
    65                                  
    66                                  ;***********************
    67                                  ; fib
    68                                  ; in: ah   = the amount of times
    69                                  ; out: edx = the result
    70                                  ;***********************
    71                                  calcFib:
    72 00000041 50                          push rax ; save this shit
    73 00000042 31D2                        xor edx, edx
    74 00000044 E802000000                  call fib
    75 00000049 58                          pop rax
    76 0000004A C3                          ret
    77                                      
    78                                  fib:
    79 0000004B 50                          push rax
    80 0000004C 80FC00                      cmp ah, 0
    81 0000004F 7415                        je .add
    82 00000051 80FC01                      cmp ah, 1
    83 00000054 7410                        je .add
    84 00000056 FECC                        dec ah
    85 00000058 E8EEFFFFFF                  call fib
    86 0000005D FECC                        dec ah
    87 0000005F E8E7FFFFFF                  call fib
    88 00000064 EB03                        jmp .done
    89                                  .add:
    90 00000066 83C201                      add edx, 1
    91                                  .done:
    92 00000069 58                          pop rax
    93 0000006A C3                          ret
    94                                      
